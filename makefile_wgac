# This makefile will run the WGAC pipeline.  (DG, Aug 2019)
# see:  https://eichlerlab.gs.washington.edu/help/wiki/doku.php?id=methods:pipelines:wgac#defuguize_regions
# make fastawhole a link to the genome such as:
# fastawhole -> /net/eichler/vol2/eee_shared/assemblies/hg19/chromosomes

WGAC_GITHUB=.
FASTAWHOLE_DIR=fastawhole
REPEATMASKER_SPECIES="Homo sapiens"
# TRIM_SPECIES must not have any spaces in it
TRIM_SPECIES=Homo_sapiens
# Evan (4/12/2019) said BLAST_SEED_SIZE should be 250--not 500
BLAST_SEED_SIZE=250
# This is the first step in the WGAC pipeline
# This makefile is for running the pipeline to prepare fugu2 for
# running on the Sun.  (DG, June 2017)
# see:  https://eichlerlab.gs.washington.edu/help/wiki/doku.php?id=methods:pipelines:wgac#defuguize_regions
#

# fastalength.log is needed for some things in makefile_partB
all : fugu2 data/bo_self.parse fastalength.log





# Run the pipeline as follows:
#
#  1. make Masking
#  2. make blastout
#  3. make selfblast
#  4. Manually copy fugu2 to vol11, ssh to srna3, and run fugumation.pl.
#  5. Wait for megablast to finish and for selfblast to finish.
#  6. Manually copy selfblast from vol11 to current working directory.
#  7. make data/step_8_mpi/trim
#  8. Wait for end trimming to finish.
#  9. make data/both.parse.defugu.trim.fixed.trim.defrac
# 10. Login to eeek and run: make align_both
# 11. Manually run wgacAlign again when it crashes the first time.
# 12. make GenomicSuperDup.noredun.tab
# 13. make plots
# 14. make all_stats

# for now, just make GenomicSuperDup.tab
all2 : data/GenomicSuperDup.tab

.PHONY : all_stats plots

all : fastalength.log fasta mask_out_done fugu blastdb/bofugu.nsq blastout data/bo_self.parse fugu2 lastz_self_done data/lav_int2.parse data/both.parse data/both.parse.defugu data/both.parse.defugu.trim data/both.parse.defugu.trim.fixed.trim data/both.parse.defugu.trim.fixed.trim.defrac data/align_both data/both.alignscorerdata data/defrac.align data/oo.weild10kb.join.all data/oo.weild10kb.join.all.cull data/GenomicSuperDup.tab stats/oneHitPerLine stats/oneHitPerLine_sort stats/mergeHit stats/AllDupLen stats/interSort  stats/intraSort stats/interMerge stats/intraMerge stats/interDupLen stats/intraDupLen


all_stats : stats/gt94WGAC_ge10K.tab stats/le94WGAC_only.tab stats/mergedWGAC.tab

plots : stats/all.join.cull.simDis_05 stats/all.join.cull.lenDis_2K stats/all.join.cull.lenDis stats/all.join.cull.simDis stats/nr_stats.tab stats/length_similarity_kimura
	pushd stats; Rscript ../plot.R; popd;

stats/gt94WGAC_ge10K.tab : stats/gt94WGAC.merged \
	awk '$$3 - $$2 >= 10000' $< > $@

stats/le94WGAC_only.tab : stats/le94WGAC.merged stats/gt94WGAC.merged
	./twoPartOvp_mgsrt.pl -i $< -f -j $(lastword $^) -t -L -o $@

stats/gt94WGAC.merged : stats/gt94WGAC.tab
	./coordsMerger_sort.pl -i $< -n 0 -b 1 -e 2 -u -o $@

stats/gt94WGAC.tab : data/GenomicSuperDup.tab
	awk 'OFS="\t" { if($$26>0.94) { print $$1,$$2,$$3 } }' $< > $@

stats/le94WGAC.merged : stats/le94WGAC.tab
	./coordsMerger_sort.pl -i $< -n 0 -b 1 -e 2 -u -o $@

stats/le94WGAC.tab : data/GenomicSuperDup.tab
	awk 'OFS="\t" { if($$26<=0.94) { print $$1,$$2,$$3 } }' $< > $@

stats/mergedWGAC.tab : stats/allWGAC.tab
	./coordsMerger_sort.pl -i $< -n 0 -b 1 -e 2 -u -o $@

stats/allWGAC.tab : data/GenomicSuperDup.tab
	cut -f 1-3 $< > $@

stats/length_similarity_kimura : data/oo.weild10kb.join.all.cull
	cut -f 23,28,34 $< > $@

stats/all_stats.tab : fastalength.log stats/inter_all_dup stats/intra_all_dup stats/all_all_dup
	./nr_report.sh $^ $@

stats/all_all_dup : stats/oneHitPerLine_sort
	groupBy -i $< -g 1 -c 5 -o sum > $@

stats/intra_all_dup : stats/intraSort
	groupBy -i $< -g 1 -c 5 -o sum > $@

stats/inter_all_dup : stats/interSort
	groupBy -i $< -g 1 -c 5 -o sum > $@

stats/nr_stats.tab : fastalength.log stats/interDupLen stats/intraDupLen stats/AllDupLen
	./nr_report.sh $^ $@

stats/intraDupLen : stats/intraMerge
	perl ./statLenPerChr.pl $< > $@

stats/interDupLen : stats/interMerge
	perl ./statLenPerChr.pl $< > $@

stats/intraMerge : stats/intraSort
	perl ./mergeHit.pl $< > $@

stats/interMerge : stats/interSort
	perl ./mergeHit.pl $< > $@

stats/intraSort : stats/oneHitPerLine_sort
	grep "intra" $< > $@

stats/interSort : stats/oneHitPerLine_sort
	grep "inter" $< > $@

stats/AllDupLen : stats/mergeHit
	perl ./statLenPerChr.pl $< > $@

stats/mergeHit : stats/oneHitPerLine_sort
	perl ./mergeHit.pl $< > $@

stats/oneHitPerLine_sort : stats/oneHitPerLine
	sort -k 1,1 -k 2,2n $< > $@

stats/oneHitPerLine : data/oo.weild10kb.join.all.cull
	mkdir -p stats
	perl ./getSimStat4Cull.pl $< > stats/all.join.cull.simDis
	perl ./getLenStat4Cull.pl $< > stats/all.join.cull.lenDis
	perl ./getLenStat4Cull-2K.pl $< >stats/all.join.cull.lenDis_2K
	perl ./getSimStat4Cull-05.pl $< >stats/all.join.cull.simDis_05
	perl ./oneHitPerLine.pl $< >$@

data/GenomicSuperDup.tab : data/oo.weild10kb.join.all.cull
	perl ./makeTrack.pl $< > $@

data/oo.weild10kb.join.all.cull : data/oo.weild10kb.join.all
	./make_oo.weild10kb.join.all.cull.sh $< $@

data/oo.weild10kb.join.all : data/defrac.align
	./make_oo.weild10kb.join.all.sh $< $@	

data/defrac.align : data/both.parse.defugu.trim.fixed.trim.defrac data/both.alignscorerdata
	table_merger.pl -s'row(\d+):both(\d+)' -i $<:$(lastword $^) -o $@

data/both.alignscorerdata : data/align_both
	align_scorer_batch2.pl -a $< -d data/align_both_data -p both -o $@

data/align_both : fasta data/both.parse.defugu.trim.fixed.trim.defrac
	./wgacAlign.sh fasta >sge_align_batch.sh
	chmod +x sge_align_batch.sh
	qsub -N global_align_$(TRIM_SPECIES) -pe orte 25 -q eichler-short.q -l h_rt=24:00:00 -sync y ./sge_commands.sh sge_align_batch.sh
	rm -rf both_tmp/both*
	rm -rf both_tmp
	./wgacAlign.sh fasta 110000 >sge_align_batch_110k.sh
	chmod +x sge_align_batch_110k.sh
	qsub -N global_align_$(TRIM_SPECIES) -pe orte 2-10 -q eichler-short.q -l h_rt=16:00:00 -sync y ./sge_commands.sh sge_align_batch_110k.sh
	rm -rf both_tmp

data/both.parse.defugu.trim.fixed.trim.defrac : data/both.parse.defugu.trim.fixed.trim fastawhole
	blast_defractionate3.pl -s 400000 -t $< -f $(lastword $^) -o $@

data/both.parse.defugu.trim.fixed.trim : data/both.parse.defugu.trim
	blast_align_by_align_overlap_fix3.pl -i $<

data/both.parse.defugu.trim : data/step_8_mpi/trim
	perl ./collectTrim.pl $<
	mv data/step_8_mpi/trim/ParallelOutput.trim $@

data/step_8_mpi/trim : data/step_8_mpi/defugu
	mkdir -p $@
	./make_trim_jobs.sh ${TRIM_SPECIES} >trim-ends_${TRIM_SPECIES}.sh
	chmod +x trim-ends_${TRIM_SPECIES}.sh
	qsub -N trim-ends_${TRIM_SPECIES} -pe orte 25 -q eichler-short.q -l h_rt=16:00:00 -sync y ./sge_commands.sh trim-ends_${TRIM_SPECIES}.sh

data/step_8_mpi/defugu : data/both.parse.defugu
	mkdir -p $@
	perl ./split.pl $< 300 $(shell wc -l $<)
	find newdir/ -type f -exec cp {} $@ \;
	rm -rf newdir

data/both.parse.defugu : data/both.parse
	blast_defuguize_hit_by_hit.pl -t $^ -d .

data/both.parse : data/bo_self.parse data/lav_int2.parse
	cp $< $@
	sed 1d $(lastword $^) >> $@

data/lav_int2.parse : lastz_self_done
	mkdir -p tmp
	# changes for lastz instead of the Sun program webb_self (DG, July 15, 2019)
	#export PERL5LIB=./JABPerlMod; blast_lav_break_self_overlap2_for_lastz.pl --in selfblast --out tmp
	blast_lav_break_self_overlap2_for_lastz.pl --in selfblast --out tmp
	blast_lav_hit_by_hit_for_lastz.pl --in tmp --out $@ \
		-options 'MIN_BPALIGN=>200, MIN_FRACBPMATCH=>0.88, MAX_%GAP => 40, SKIP_SELF => 0, SKIP_OVERLAP=>1'
	rm -rf tmp

lastz_self_done : 
	run_lastz_self.snake.sh


fugu2 : fugu
	cp -r $^ $@
	fasta_only_ATCGN.pl -p $@ -o $@ -u

data/bo_self.parse : blastout
	perl ./rmNohitfiles.pl $^
	find $^ -type f -exec grep -L 'Matrix' {} \;
	# /usr/bin/perl must be used--not one of the perl modules
	export PATH=/usr/bin:$PATH
	blastparser42.pl -in ./blastout \
		-out data/bo_self.parse \
		-noprevq -v \
		-output '-ssort=>name, -hsort=>qb' \
		-filter '-min_bpalign=>$(BLAST_SEED_SIZE), -min_fracbpmatch=>0.88, -max_%gap =>40, -no_subject_self => yes, -no_doubleoverlap=>score'

blastout : blastdb/bofugu.nsq
	mkdir -p blastout
	qsub -pe orte 50 -N wgac_blast_$(TRIM_SPECIES) -q eichler-short.q -l h_rt=8:00:00 -sync y ./blast64.sh -t /var/tmp/$(shell whoami)/$(TRIM_SPECIES)/blastdb

blastdb/bofugu.nsq : fugu
	mkdir -p blastdb
	dir_cat $^ blastdb/bofugu
	formatdb -i blastdb/bofugu -o F -p F -a F
	rm -f blastdb/bofugu

fugu : fasta mask_out_done
	mkdir -p $@
	fasta_fuguize_batch.pl -f $< -r mask_out -o $@


mask_out_done : fasta
	mkdir -p mask_out
	ls $< |xargs -i perl ./maskOutGenFromLowCase.pl fasta/{} mask_out/{}.out
	mkdir -p data
	touch mask_out_done

fasta : fastawholesplit
	mkdir -p $@
	fasta_fractionate -f $^ -s 400000 -o $@


fastawholesplit : fastawhole
	mkdir -p $@
	cat fastawhole/* | ~/bin/split_fasta_file.py stdin -d fastawholesplit
	cd fastawholesplit && rename ".fasta" "" *

fastalength.log : fastawholesplit
	fasta_length -d $^/ -o $@ -f
