# This makefile will run the WGAC pipeline.  (DG, Aug 2019)
# see:  https://eichlerlab.gs.washington.edu/help/wiki/doku.php?id=methods:pipelines:wgac#defuguize_regions
# make an fofn of the sequences called fastawhole.fofn


# TRIM_SPECIES must not have any spaces in it.  It appears to be just
# to be used for filenames
TRIM_SPECIES=anything
# Evan (4/12/2019) said BLAST_SEED_SIZE should be 250--not 500
BLAST_SEED_SIZE=250



# the pipeline as follows does the following:
#
#  1. make Masking
#  2. make blastout
#  3. make selfblast
#  5. Wait for megablast to finish and for selfblast to finish.
#  7. make data/step_8_mpi/trim
#  8. Wait for end trimming to finish.
#  9. make data/both.parse.defugu.trim.fixed.trim.defrac
# 11. run wgacAlign again when it crashes the first time.
# 12. make GenomicSuperDup.tab
# 13. make plots
# 14. make all_stats

# for now, just make GenomicSuperDup.tab
#all2 : data/GenomicSuperDup.tab

.PHONY : all_stats plots

all : chromosomes.txt fastalength.log fasta_done mask_out_done fugu_done blastdb/bofugu.nsq blastout_done data/inter_block.parse fugu2_done lastz_self_done data/intra_block.parse data/both.parse data/both.parse.defugu data/both.parse.defugu.trim data/both.parse.defugu.trim.fixed.trim data/both.parse.defugu.trim.fixed.trim.defrac data/both.alignscorerdata data/defrac.align data/oo.weild10kb.join.all data/oo.weild10kb.join.all.cull data/GenomicSuperDup.tab stats/oneHitPerLine stats/oneHitPerLine_sort stats/mergeHit stats/AllDupLen stats/interSort  stats/intraSort stats/interMerge stats/intraMerge stats/interDupLen stats/intraDupLen summary.txt summary.xlsx

# summary.xlsx is useful for quickly making powerpoint presentations
summary.xlsx : summary.txt
# this failed with ModuleNotFoundError: No module named 'six' 
#	module load python/3.7.7 numpy/1.21.1 pandas/1.3.1 && ./make_excel_summary.py --szSummaryInputFile summary.txt --szExcelOutputFile summary.xlsx
	module load miniconda/4.9.2 && ./make_excel_summary.py --szSummaryInputFile summary.txt --szExcelOutputFile summary.xlsx

summary.txt : data/GenomicSuperDup.tab chromosomes.txt
	cd data && ../compute_summary_stats.sh >../summary.txt

all_stats : stats/gt94WGAC_ge10K.tab stats/le94WGAC_only.tab stats/mergedWGAC.tab

all_plots: plots plots_just_chromosomes parasightWithFakeChromosomeDone parasightWithNoInterDone

#plots : stats/all.join.cull.simDis_05 stats/all.join.cull.lenDis_2K stats/all.join.cull.lenDis stats/all.join.cull.simDis stats/nr_stats.tab stats/length_similarity_kimura

plots : stats/oneHitPerLine stats/length_similarity_kimura stats/nr_stats.tab data/xw.al
	module load R/3.6.1; pushd stats; Rscript ../plots.R; popd; module load perl/5.14.2 && ./for_parasight.sh

plots_just_chromosomes : stats_just_chromosomes/oneHitPerLine stats_just_chromosomes/length_similarity_kimura stats_just_chromosomes/nr_stats.tab data/xw.al
	module load R/3.6.1; pushd stats_just_chromosomes; Rscript ../plots.R; popd; module load perl/5.14.2 && ./for_parasight_just_chromosomes.sh

parasightWithFakeChromosomeDone: stats/oneHitPerLine stats/length_similarity_kimura stats/nr_stats.tab data/xw.al
	module load perl/5.14.2 && ./parasightWithFakeChromosome.sh

parasightWithNoInterDone:  parasightWithFakeChromosomeDone
	module load perl/5.14.2 && ./parasightWithNoInter.sh

data/xw.al : data/oo.weild10kb.join.all.cull
	cd data && cut -f 1,2,3,4,5,6,7,8,23,28 oo.weild10kb.join.all.cull > xw.join.all.cull
	cd data && module load perl/5.14.2 && perl ../xwalign.pl xw.join.all.cull > xw.al

stats/gt94WGAC_ge10K.tab : stats/gt94WGAC.merged \
	awk '$$3 - $$2 >= 10000' $< > $@

stats/le94WGAC_only.tab : stats/le94WGAC.merged stats/gt94WGAC.merged
	./twoPartOvp_mgsrt.pl -i $< -f -j $(lastword $^) -t -L -o $@

stats/gt94WGAC.merged : stats/gt94WGAC.tab
	./coordsMerger_sort.pl -i $< -n 0 -b 1 -e 2 -u -o $@

stats/gt94WGAC.tab : data/GenomicSuperDup.tab
	awk 'OFS="\t" { if($$26>0.94) { print $$1,$$2,$$3 } }' $< > $@

stats/le94WGAC.merged : stats/le94WGAC.tab
	./coordsMerger_sort.pl -i $< -n 0 -b 1 -e 2 -u -o $@

stats/le94WGAC.tab : data/GenomicSuperDup.tab
	awk 'OFS="\t" { if($$26<=0.94) { print $$1,$$2,$$3 } }' $< > $@

stats/mergedWGAC.tab : stats/allWGAC.tab
	./coordsMerger_sort.pl -i $< -n 0 -b 1 -e 2 -u -o $@

stats/allWGAC.tab : data/GenomicSuperDup.tab
	cut -f 1-3 $< > $@

stats_just_chromosomes/length_similarity_kimura : data/oo.weild10kb.join.all.cull.just.chromosomes
	cut -f 23,28,34 $< > $@

stats/length_similarity_kimura : data/oo.weild10kb.join.all.cull
	cut -f 23,28,34 $< > $@

stats/all_stats.tab : fastalength.log stats/inter_all_dup stats/intra_all_dup stats/all_all_dup
	./nr_report.sh $^ $@

stats/all_all_dup : stats/oneHitPerLine_sort
	groupBy -i $< -g 1 -c 5 -o sum > $@

stats/intra_all_dup : stats/intraSort
	groupBy -i $< -g 1 -c 5 -o sum > $@

stats/inter_all_dup : stats/interSort
	groupBy -i $< -g 1 -c 5 -o sum > $@

stats/nr_stats.tab : fastalength.log stats/interDupLen stats/intraDupLen stats/AllDupLen
	./nr_report.sh $^ $@

stats_just_chromosomes/nr_stats.tab : fastalength_just_chromosomes.log stats_just_chromosomes/interDupLen stats_just_chromosomes/intraDupLen stats_just_chromosomes/AllDupLen
	./nr_report.sh $^ $@


fastalength_just_chromosomes.log : fastalength.log chromosomes.txt
	head -1 fastalength.log >temp && cat fastalength.log | sed '1d;$d' | filterByTokenValue.py --szFileOfLegalValues chromosomes.txt --n0BasedToken 1 | sort -k2,2V >>temp && echo "dummy_last_line" >>temp && mv temp fastalength_just_chromosomes.log 


stats/intraDupLen : stats/intraMerge
	perl ./statLenPerChr.pl $< > $@

stats_just_chromosomes/intraDupLen : stats_just_chromosomes/intraMerge
	perl ./statLenPerChr.pl $< > $@

stats/interDupLen : stats/interMerge
	perl ./statLenPerChr.pl $< > $@

stats_just_chromosomes/interDupLen : stats_just_chromosomes/interMerge
	perl ./statLenPerChr.pl $< > $@

stats/intraMerge : stats/intraSort
	perl ./mergeHit.pl $< > $@

stats_just_chromosomes/intraMerge : stats_just_chromosomes/intraSort
	perl ./mergeHit.pl $< > $@

stats/interMerge : stats/interSort
	perl ./mergeHit.pl $< > $@

stats_just_chromosomes/interMerge : stats_just_chromosomes/interSort
	perl ./mergeHit.pl $< > $@

stats/intraSort : stats/oneHitPerLine_sort
	grep "intra" $< > $@

stats_just_chromosomes/intraSort : stats_just_chromosomes/oneHitPerLine_sort
	grep "intra" $< > $@

stats/interSort : stats/oneHitPerLine_sort
	grep "inter" $< > $@

stats_just_chromosomes/interSort : stats_just_chromosomes/oneHitPerLine_sort
	grep "inter" $< > $@

stats/AllDupLen : stats/mergeHit
	perl ./statLenPerChr.pl $< > $@

stats_just_chromosomes/AllDupLen : stats_just_chromosomes/mergeHit
	perl ./statLenPerChr.pl $< > $@

stats/mergeHit : stats/oneHitPerLine_sort
	perl ./mergeHit.pl $< > $@

stats_just_chromosomes/mergeHit : stats_just_chromosomes/oneHitPerLine_sort
	perl ./mergeHit.pl $< > $@

stats/oneHitPerLine_sort : stats/oneHitPerLine
	sort -k 1,1 -k 2,2n $< > $@

stats_just_chromosomes/oneHitPerLine_sort : stats_just_chromosomes/oneHitPerLine
	sort -k 1,1 -k 2,2n $< > $@

stats/oneHitPerLine : data/oo.weild10kb.join.all.cull
	mkdir -p stats
	perl ./getSimStat4Cull.pl $< > stats/all.join.cull.simDis
	# changed DG 12/2021 to not have kb on every x label
	#     perl ./getLenStat4Cull.pl $< > stats/all.join.cull.lenDis
	perl ./getLenStat4Cull.pl $< | sed 's/\.kb//' > stats/all.join.cull.lenDis
	perl ./getLenStat4Cull-2K.pl $< >stats/all.join.cull.lenDis_2K
	perl ./getSimStat4Cull-05.pl $< >stats/all.join.cull.simDis_05
	perl ./oneHitPerLine.pl $< >$@

stats_just_chromosomes/oneHitPerLine : data/oo.weild10kb.join.all.cull.just.chromosomes
	mkdir -p stats_just_chromosomes
	perl ./getSimStat4Cull.pl $< > stats_just_chromosomes/all.join.cull.simDis
	perl ./getLenStat4Cull.pl $< | sed 's/\.kb//' > stats_just_chromosomes/all.join.cull.lenDis
	perl ./getLenStat4Cull-2K.pl $< >stats_just_chromosomes/all.join.cull.lenDis_2K
	perl ./getSimStat4Cull-05.pl $< >stats_just_chromosomes/all.join.cull.simDis_05
	perl ./oneHitPerLine.pl $< >$@

data/oo.weild10kb.join.all.cull.just.chromosomes : data/oo.weild10kb.join.all.cull chromosomes.txt
	# to copy the header line
	head -1 data/oo.weild10kb.join.all.cull >data/oo.weild10kb.join.all.cull.just.chromosomes
	cat data/oo.weild10kb.join.all.cull chromosomes.txt | filterByTokenValue.py --szFileOfLegalValues chromosomes.txt --n0BasedToken 0 | filterByTokenValue.py --szFileOfLegalValues chromosomes.txt --n0BasedToken 4 >>data/oo.weild10kb.join.all.cull.just.chromosomes

data/GenomicSuperDup.tab : data/oo.weild10kb.join.all.cull
	perl ./makeTrack.pl $< > $@

data/oo.weild10kb.join.all.cull : data/oo.weild10kb.join.all
	./make_oo.weild10kb.join.all.cull.sh $< $@

data/oo.weild10kb.join.all : data/defrac.align
	./make_oo.weild10kb.join.all.sh $< $@	

data/defrac.align : data/both.parse.defugu.trim.fixed.trim.defrac data/both.alignscorerdata
	table_merger.pl -s'row(\d+):both(\d+)' -i $<:$(lastword $^) -o $@

#data/both.alignscorerdata : data/align_both
data/both.alignscorerdata : global_align_110k_done
	# data/align_both is the input I think (DG, May 2020) 
	# data/align_both_data and align_scorer.summary.table are the outputs
    # prints lots of "BASE SPACE MATRIX" to stdout while running
	align_scorer_batch2.pl -a data/align_both -d data/align_both_data -p both -o $@

# #data/align_both : fasta_done data/both.parse.defugu.trim.fixed.trim.defrac
# align_both_done : fasta_done data/both.parse.defugu.trim.fixed.trim.defrac
# 	./wgacAlign.sh fasta >sge_align_batch.sh
# 	chmod +x sge_align_batch.sh
# 	qsub -N global_align_$(TRIM_SPECIES) -pe orte-testing 25 -sync y ./sge_commands.sh sge_align_batch.sh
# 	rm -rf both_tmp/both*
# 	rm -rf both_tmp
# 	./wgacAlign.sh fasta 110000 >sge_align_batch_110k.sh
# 	chmod +x sge_align_batch_110k.sh
# 	qsub -N global_align_$(TRIM_SPECIES) -pe orte-testing 2-10 -sync y ./sge_commands.sh sge_align_batch_110k.sh
# 	rm -rf both_tmp
# 	./checkIfWgacAlignSucceeded.sh
# 	touch align_both_done


global_align_110k_done: made_sge_align_batch_110k
	#./run_global_align_110k.snake.sh || True
	./didEnoughGlobalAlignmentsSucceed.py --szSgeAlignBatch sge_align_batch.sh --szSgeAlignBatch110k sge_align_batch_110k.sh  --global_align_110k_flags_directory global_align_110k_flags --fMaximumPerCentAlignmentFailure 5.0 && touch global_align_110k_done
	exit

made_sge_align_batch_110k: global_align_done
	rm -rf both_tmp/both*
	rm -rf both_tmp
	./wgacAlign.sh fasta 110000 >sge_align_batch_110k.sh
	touch made_sge_align_batch_110k


global_align_done: made_sge_align_batch
	./run_global_align.snake.sh

made_sge_align_batch: fasta_done data/both.parse.defugu.trim.fixed.trim.defrac
	rm -rf both_tmp/both*
	rm -rf both_tmp
	./wgacAlign.sh fasta >sge_align_batch.sh
	touch made_sge_align_batch

data/both.parse.defugu.trim.fixed.trim.defrac : data/both.parse.defugu.trim.fixed.trim fastawholesplit_done
	blast_defractionate3.pl -s 400000 -t $< -f fastawholesplit -o $@

data/both.parse.defugu.trim.fixed.trim : data/both.parse.defugu.trim
	blast_align_by_align_overlap_fix3.pl -i $<

#data/both.parse.defugu.trim : data/step_8_mpi/trim
data/both.parse.defugu.trim : trim_ends_done
	perl ./collectTrim.pl data/step_8_mpi/trim 
	mv data/step_8_mpi/trim/ParallelOutput.trim $@

#data/step_8_mpi/trim : data/step_8_mpi/defugu
trim_ends_done : data/step_8_mpi/defugu
	mkdir -p data/step_8_mpi/trim
	./make_trim_jobs.sh ${TRIM_SPECIES} >trim-ends_${TRIM_SPECIES}.sh
	./run_trim_ends.snake.sh
	#qsub -N trim-ends_${TRIM_SPECIES} -pe orte-testing 25 -sync y ./sge_commands.sh trim-ends_${TRIM_SPECIES}.sh
	./checkIfTrimEndsSucceeded.sh
	touch trim_ends_done

data/step_8_mpi/defugu : data/both.parse.defugu
	mkdir -p $@
	perl ./split.pl $< 300 $(shell wc -l $<)
	find newdir/ -type f -exec cp {} $@ \;
	rm -rf newdir

data/both.parse.defugu : data/both.parse
	blast_defuguize_hit_by_hit.pl -t $^ -d .

data/both.parse : data/inter_block.parse data/intra_block.parse
	cp $< $@
	sed 1d $(lastword $^) >> $@

data/intra_block.parse : lastz_self_done
	mkdir -p tmp
	# changes for lastz instead of the Sun program webb_self (DG, July 15, 2019)
	#export PERL5LIB=./JABPerlMod; blast_lav_break_self_overlap2_for_lastz.pl --in selfblast --out tmp
	# this prints PRINT DOUBLE GAP ERROR and BAD ALIGNMENT but so does the parser of blast
	blast_lav_break_self_overlap2_for_lastz.pl --in selfblast --out tmp
	blast_lav_hit_by_hit_for_lastz.pl --in tmp --out $@ \
		-options 'MIN_BPALIGN=>200, MIN_FRACBPMATCH=>0.88, MAX_%GAP => 40, SKIP_SELF => 0, SKIP_OVERLAP=>1'
	rm -rf tmp

lastz_self_done : fugu2_done
	run_lastz_self.snake.sh


# create fugu2
fugu2_done : fugu_trf_done
	cp -r fugu_trf fugu2
	fasta_only_ATCGN.pl -p fugu2 -o fugu2 -u
	touch fugu2_done    

data/inter_block.parse : blastout_done
	perl ./rmNohitfiles.pl blastout
	find $^ -type f -exec grep -L 'Matrix' {} \;
	# /usr/bin/perl must be used--not one of the perl modules
	export PATH=/usr/bin:$PATH
	# this prints PRINT DOUBLE GAP ERROR and BAD ALIGNMENT but so does the parser of lastz
	blastparser42.pl -in ./blastout \
		-out data/inter_block.parse \
		-noprevq -v \
		-output '-ssort=>name, -hsort=>qb' \
		-filter '-min_bpalign=>$(BLAST_SEED_SIZE), -min_fracbpmatch=>0.88, -max_%gap =>40, -no_subject_self => yes, -no_doubleoverlap=>score'

blastout_done : blastdb/bofugu.nsq
	mkdir -p blastout
	# for time being, run under centos6
	./run_blast_fugu.snake.sh
	./checkIfBlastSucceeded.sh
	touch blastout_done

blastdb/bofugu.nsq : fugu_trf_done
	mkdir -p blastdb
	dir_cat fugu_trf blastdb/bofugu
	formatdb -i blastdb/bofugu -o F -p F -a F
	rm -f blastdb/bofugu


fugu_trf_done : fugu_done
	./run_trf.snake.sh


fugu_done : fasta_done mask_out_done
	mkdir -p fugu
	fasta_fuguize_batch.pl -f fasta -r mask_out -o fugu
	touch fugu_done

mask_out_done : fasta_done
	mkdir -p mask_out
	ls fasta |xargs -i perl ./maskOutGenFromLowCase.pl fasta/{} mask_out/{}.out
	mkdir -p data
	touch mask_out_done

fasta_done : fastawholesplit_done
	mkdir -p fasta
	fasta_fractionate -f fastawholesplit -s 400000 -o fasta
	touch fasta_done



fastalength.log : fastawholesplit_done
	fasta_length -d fastawholesplit -o $@ -f

fastawholesplit_done : fastawhole_shorter_lines_done
	mkdir -p fastawholesplit
	module load python/2.7.13 && cat `cat fastawhole_shorter_lines.fofn` | ./split_fasta_file.py stdin -d fastawholesplit
	cd fastawholesplit && rename ".fasta" "" *
	touch fastawholesplit_done


fastawhole_shorter_lines_done: fastawhole.fofn is_repeatmasked_flag
	./longer_to_shorter_lines.sh && touch fastawhole_shorter_lines_done

is_repeatmasked_flag : fastawhole.fofn
	cat `cat fastawhole.fofn` | ./countBasesACGT >countBasesACGT.txt
	grep "lowercase bases" countBasesACGT.txt | awk '{if ( $$8 < 2.0 ) {print "sequence does not appear to be repeatmasked\n"; exit 1 } else { system("touch is_repeatmasked_flag" ) } }'
