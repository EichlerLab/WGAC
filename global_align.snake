import re
import os


if not os.path.exists("log"):
    os.makedirs("log")



localrules: all_global_alignments



#dictInputFile = {}

dictCommand = {}

nMaxCommandsInCurrentJob = 100

with open( "sge_align_batch.sh", "r" ) as fListOfJobs:
     nCurrentJobNumber = 1
     nNumberOfCommandsInCurrentJob = 0
     szCommandsForCurrentJob = ""
     n1Line = 0
     bLastCommand = False
     while True:
         szLine = fListOfJobs.readline()

         if ( szLine == "" ):
             bLastCommand = True

         n1Line += 1

         # looks like:

         # 0 mkdir
         # 1 -p
         # 2 /net/eichler/vol26/7200/dgordon/bonobo/wgac/both_tmp/both0000037;cd
         # 3 /net/eichler/vol26/7200/dgordon/bonobo/wgac/both_tmp/both0000037;/net/eichler/vol26/7200/dgordon/bonobo/wgac/align_fast3.pl
         # 4 -i
         # 5 /net/eichler/vol26/7200/dgordon/bonobo/wgac/fasta/chr10:8:10761
         # 6 -j
         # 7 /net/eichler/vol26/7200/dgordon/bonobo/wgac/fasta/chr2b:14060:24121
         # 8 -l
         # 9 60000
         # 10 -o
         # 11 /net/eichler/vol26/7200/dgordon/bonobo/wgac/data/align_both/0000/both0000037
         # 12 -f
         # 13 -40
         # 14 -g
         # 15 -1
         # 16 -b
         # 17 400000;cd
         # 18 /net/eichler/vol26/7200/dgordon/bonobo/wgac;rm
         # 19 -rf
         # 20 /net/eichler/vol26/7200/dgordon/bonobo/wgac/both_tmp/both0000037


         # prevent a bad alignment causing align_fast3.pl to terminate
         # with an error causing all the rest of commands this job to
         # not be done

         szLine = re.sub( r'400000;cd', '400000 || true; cd ', szLine )


         if ( not bLastCommand ):
             szCommandsForCurrentJob += ( re.sub( r';', ' && ', szLine.rstrip() ) + "\n" )
             nNumberOfCommandsInCurrentJob += 1

         if ( ( nNumberOfCommandsInCurrentJob >= nMaxCommandsInCurrentJob ) or bLastCommand ) :
             szCommandsForCurrentJob += "\ntouch global_align_flags/"
             szCommandsForCurrentJob += str( nCurrentJobNumber )
             
             dictCommand[ nCurrentJobNumber ] = szCommandsForCurrentJob

             if ( bLastCommand ):
                 break
             else:
                 # prepare for next job
                 nCurrentJobNumber += 1
                 nNumberOfCommandsInCurrentJob = 0
                 szCommandsForCurrentJob = ""
             

     #print( "job numbers are: " , list( dictCommand.keys() ) )

rule all_global_alignments:
	input: expand( "global_align_flags/{nNumber}", nNumber = list( dictCommand.keys() ) )
	output: touch( "global_align_done" )

rule run_one_global_alignment:
	output: "global_align_flags/{nNumber}"
        params: sge_opts="-l mfree=4G"
	run:
		szCommands = dictCommand[ int(wildcards.nNumber) ]
                aLines = szCommands.splitlines()
                for szCommand in aLines:
                    print( "about to execute: " + szCommand )
                    shell( szCommand )


